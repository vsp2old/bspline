#! /usr/local/bin/ruby
require 'bspline'
include BSPLINE
include Math

=begin

# Interpolation with smooth correction curved line generated by using a B-spline

【Module】		BSPLINE
【Class】 		Gspline
【Method】
（1）new			Initialize
	obj = Gspline.new([[x1,y1],...,[xn,yn]], j, g)
	:1 list of data points.
	:2 dimension
	:3 smoothing coefficient
（2）[]			Calculate interpolation
	obj[x]
	obj[x0,...,xi]
（3）value		Calculate interpolation with differential value
	obj.value(x, b = 0)
	b: order of differential value （optional）
（4）sekibun		Calculate interpolation with integrated value
	obj.sekibun(a, b)
	result is a definite integral of section [a,b]
（5）each
	obj.each {}
	This is equivalent with follows,
	[[x1,y1],...,[xn,yn]].each {}
（6）plot
	obj.plot([x0,...,xn], d, b = 0) { |x,y| ... }
	:1 list of data points
	:2 number of the division
	:3 order of differential value （optional）
=end

a = []; j = 3; b = []; g = 0.1; gsize = 43
x0 = -1.256640; xn = 7.539820; xd = (xn - x0)/(gsize-1); xi = x0
for i in 0...gsize
	x = xi
	y = sin(xi) + sin(10 * xi)
	w = 1.0
	a[i] = [x, y]
	b[i] = x
	xi += xd
end
gsp = a.gspline order:j, smoothing_factor:g
vv = []
gsp.each do |p|
	x = p[0]
	printf("% .15f % .15f % .15f\n", x, p[1], gsp[x])
	vv.push p
end
# Draw Graph
require "gnuplot"
 
File.open( "exgspline.plt", "w") do |gp|
	Gnuplot::Plot.new( gp ) do |plot|
		plot.title  'Sample'
		plot.ylabel 'Y'
		plot.xlabel 'X'
		x = vv.map {|v| v[0]}
		y = vv.map {|v| v[1]}
		plot.data << Gnuplot::DataSet.new( [x, y] ) do |ds|
			ds.with = "lines"
			ds.notitle
		end
		y = x.map {|v| gsp[v]}
		plot.data << Gnuplot::DataSet.new( [x, y] ) do |ds|
			ds.with = "lines"
			ds.linewidth = 2
			ds.title = "Smoothing"
		end
	end
end
